{"version":3,"sources":["components/header.js","keys.js","components/fireTracker.js","components/firemap.js","components/volcanoTracker.js","components/volcanomap.js","components/icebergmap.js","components/loader.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Navbar","dark","expand","Nav","navbar","NavItem","to","GOOGLE_MAP_API_KEY","FireTracker","lat","lng","onClick","icon","fireIcon","FireMap","props","state","locationInfo","firemarkers","this","eventData","map","ev","categories","id","geometries","coordinates","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","Component","defaultProps","VolcanoTracker","volcanoIcon","VolcanoMap","volcanomarkers","type","IcebergMap","icebergmarkers","Loader","App","useState","setEventData","isLoading","setIsLoading","useEffect","a","fetch","res","json","events","fetchEvents","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e9ee12.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav, NavItem} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"heading\">\r\n        <h3><b>Natural Events Tracker</b></h3>\r\n        <small>(Using NASA Open APIs)</small>\r\n      </div>\r\n      <Navbar dark expand=\"xs\" className=\"navbarbg\">\r\n         <div className=\"container\">\r\n              <Nav navbar>\r\n                <NavItem >\r\n                  <NavLink className=\"nav-link\" to=\"/wildfire\">Wildfire</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/volcano\">Volcanoes</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/iceberg\">Sea and Lake Ice</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n         </div>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const GOOGLE_MAP_API_KEY = 'AIzaSyDceclUPKtXW9Ctuu5-BWEf0HGZl8lj2bA';\r\n","import { Icon } from '@iconify/react';\r\nimport fireIcon from '@iconify/icons-mdi/fire-alert';\r\n\r\nconst FireTracker = ({ lat, lng, onClick }) => {\r\n  return(\r\n    <div className=\"location-tracker\">\r\n      <Icon icon={ fireIcon } className=\"location-icon\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FireTracker;\r\n","import { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { GOOGLE_MAP_API_KEY } from '../keys';\r\nimport FireTracker from './fireTracker';\r\n//import LocationInfoBox from './locationInfoBox';\r\n\r\nclass FireMap extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      locationInfo: null,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.props.eventData);\r\n\r\n    const firemarkers = this.props.eventData.map(ev => {\r\n      if (ev.categories[0].id === 8) {\r\n        return(\r\n            <FireTracker key={ev.id} lat={ev.geometries[0].coordinates[1]}\r\n              lng={ev.geometries[0].coordinates[0]}\r\n            />\r\n        );\r\n      }\r\n      return null;\r\n    })\r\n\r\n    return(\r\n      <div className=\"map\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{key: GOOGLE_MAP_API_KEY}}\r\n          defaultCenter= { this.props.center }\r\n          defaultZoom= { this.props.zoom }\r\n        >\r\n          {firemarkers}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFireMap.defaultProps = {\r\n  center: {\r\n    lat: 22.56263,\r\n    lng: 88.36304\r\n  },\r\n  zoom: 3\r\n}\r\n\r\nexport default FireMap;\r\n","import { Icon } from '@iconify/react';\r\nimport volcanoIcon from '@iconify-icons/noto/volcano';\r\n\r\nconst VolcanoTracker = ({ lat, lng, onClick }) => {\r\n  return(\r\n    <div className=\"location-tracker\">\r\n      <Icon icon={ volcanoIcon } className=\"location-icon\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VolcanoTracker;\r\n","import { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { GOOGLE_MAP_API_KEY } from '../keys';\r\nimport VolcanoTracker from './volcanoTracker';\r\n//import LocationInfoBox from './locationInfoBox';\r\n\r\nclass VolcanoMap extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      locationInfo: null,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const volcanomarkers = this.props.eventData.map(ev => {\r\n      if (ev.categories[0].id === 12 && ev.geometries[0].type === 'Point') {\r\n          return(\r\n              <VolcanoTracker key={ev.id} lat={ev.geometries[0].coordinates[1]}\r\n                lng={ev.geometries[0].coordinates[0]}\r\n              />\r\n          );\r\n      }\r\n      return null;\r\n    })\r\n\r\n    return(\r\n      <div className=\"map\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{key: GOOGLE_MAP_API_KEY}}\r\n          defaultCenter= { this.props.center }\r\n          defaultZoom= { this.props.zoom }\r\n        >\r\n          {volcanomarkers}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nVolcanoMap.defaultProps = {\r\n  center: {\r\n    lat: 22.56263,\r\n    lng: 88.36304\r\n  },\r\n  zoom: 3\r\n}\r\n\r\nexport default VolcanoMap;\r\n","import { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { GOOGLE_MAP_API_KEY } from '../keys';\r\nimport IcebergTracker from './icebergTracker';\r\n//import LocationInfoBox from './locationInfoBox';\r\n\r\nclass IcebergMap extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      locationInfo: null,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const icebergmarkers = this.props.eventData.map(ev => {\r\n      /*if (ev.categories[0].id === 15) {\r\n        console.log(ev);\r\n        return(\r\n            <IcebergTracker key={ev.id} lat={ev.geometries.pop().coordinates[1]}\r\n              lng={ev.geometries.pop().coordinates[0]}\r\n            />\r\n        );\r\n      }*/\r\n      return null;\r\n    })\r\n\r\n    return(\r\n      <div className=\"map\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{key: GOOGLE_MAP_API_KEY}}\r\n          defaultCenter= { this.props.center }\r\n          defaultZoom= { this.props.zoom }\r\n        >\r\n          {icebergmarkers}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIcebergMap.defaultProps = {\r\n  center: {\r\n    lat: 22.56263,\r\n    lng: 88.36304\r\n  },\r\n  zoom: 6\r\n}\r\n\r\nexport default IcebergMap;\r\n","const Loader = () => {\r\n  return(\r\n    <div className=\"bouncer-body\">\r\n      <div className=\"bouncer\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Loader;\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport FireMap from './components/firemap';\nimport VolcanoMap from './components/volcanomap';\nimport IcebergMap from './components/icebergmap';\nimport Loader from './components/loader';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\n\nfunction App() {\n  const[eventData, setEventData] = useState([]);\n  const[isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setIsLoading(true)\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events');\n      const { events } = await res.json();\n      setEventData(events)\n      setIsLoading(false)\n    }\n    fetchEvents()\n  },[])\n\n  return (\n    <div>\n      <Header />\n       {!isLoading ?\n         <Switch>\n           <Route path='/wildfire' component={() => <FireMap eventData={eventData}/> } />\n           <Route path='/volcano' component={() => <VolcanoMap eventData={eventData}/> } />\n           <Route path='/iceberg' component={() => <IcebergMap eventData={eventData}/> } />\n           <Redirect to='/wildfire' />\n         </Switch>\n           : <Loader /> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n   <BrowserRouter>\n    <App />\n   </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}